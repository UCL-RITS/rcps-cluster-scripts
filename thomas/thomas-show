#!/usr/bin/env python

import os.path
import argparse
import mysql.connector
from mysql.connector import errorcode

# simplest possible outputting of query result
def simpleprint(cursor):
    for row in cursor:
        print (row)

# write out results as a table with header and separators
def tableprint(cursor):
    results = cursor.fetchall()

    widths = []
    columns = []
    lines = '|'
    separator = '+'

    # make the column width the maximum necessary width
    # name[2] is the char length of the longest value
    # name[0] is the column header text
    for name in cursor.description:
        widths.append(max(name[2], len(name[0])))
        columns.append(name[0])

    # format the text lines and separator lines of the table
    for w in widths:
        lines += " %-"+"%ss |" % (w,)
        separator += '-'*w + '--+'

    print(separator)
    print(lines % tuple(columns))
    print(separator)
    for row in results:
        print(lines % row)
    print(separator)
# end tableprint

if __name__ == "__main__":

    ###############################################################
    # --user <username>         show all current info for this user
    # --contacts                show all allowed values for poc_id
    # --institutes              show all allowed values for inst_id
    # --allusers			show all current users

    parser = argparse.ArgumentParser(description="Show data from the Thomas database")

    parser.add_argument("--user", metavar="username", help="Show all current info for this user")
    parser.add_argument("--contacts", help="Show all allowed values for contact", action='store_true')
    parser.add_argument("--institutes", help="Show all allowed values for institute", action='store_true')
    parser.add_argument("--allusers", help="Show all current users", action='store_true')

    args = parser.parse_args()
    # make a dictionary from args
    args_dict = vars(args)

    # sanity check input
    # usernames must be 7 characters
    if (args.user != None and len(args.user) != 7):
        print("Invalid username, must be 7 characters: %s"), args.user

    # connect to MySQL database with read access.
    # (.thomas.cnf has readonly connection details as the default option group)

    try:
        conn = mysql.connector.connect(option_files=os.path.expanduser('~/.thomas.cnf'), database='thomas')
        cursor = conn.cursor()

        # Print all info for the given user
        if (args.user != None):
            query = ("SELECT username, givenname, surname, email, creation_date, modification_date FROM users WHERE username=%s", args.user)
            cursor.execute(query)
            print("All information for %s:", args.user)
            tableprint(cursor)
            # print ssh key separately as it is huge
            query = ("SELECT ssh_key FROM users WHERE username=%s", args.user)
            cursor.execute(query)
            print("SSH key on file:")
            simpleprint(cursor)
            # show all of user's projects and related points of contact
            query = ("SELECT project, poc_id, creation_date, modification_date FROM projectusers WHERE username=%s", args.user)
            cursor.execute(query)
            print("User is in these projects:")
            tableprint(cursor)

        # Show all allowed values for poc_id
        if (args.contacts):
            query = ("SELECT poc_id, poc_givenname, poc_surname, poc_email FROM pointofcontact")
            cursor.execute(query)
            print("All current Points of Contact:")
            tableprint(cursor)
        
        # Show all allowed values for inst_id
        if (args.institutes):
            query = ("SELECT inst_id, name FROM institutes")
            cursor.execute(query)
            print("All current institutes")
            tableprint(cursor)

        # Print all existing users (username, names, email, dates but not ssh keys)
        if (args.allusers):
            query = ("SELECT username, givenname, surname, email, creation_date, modification_date FROM users")
            cursor.execute(query)
            print("All current users:")
            tableprint(cursor)

    except mysql.connector.Error as err:
        if err.errno == errorcode.ER_ACCESS_DENIED_ERROR:
            print("Access denied: Something is wrong with your user name or password")
        elif err.errno == errorcode.ER_BAD_DB_ERROR:
            print("Database does not exist")
        else:
            print(err)
    else:
        cursor.close()
        conn.close()

